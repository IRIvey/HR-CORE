generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Candidate {
  id          Int             @id @default(autoincrement())
  name        String
  email       String          @unique
  phone       String?
  position    String
  experience  String
  status      CandidateStatus @default(NEW)
  rating      Float?
  location    String?
  source      String?
  appliedDate DateTime        @default(now())
  skills      Json? // Array of skills
  resumeUrl   String?
  notes       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  jobPostingId Int?
  jobPosting   JobPosting? @relation(fields: [jobPostingId], references: [id])
  interviews   Interview[]

  @@map("candidates")
}

model JobPosting {
  id           Int       @id @default(autoincrement())
  title        String
  department   String
  location     String
  description  String?
  requirements String?
  salary       String?
  status       JobStatus @default(ACTIVE)
  applicants   Int       @default(0)
  postedDate   DateTime  @default(now())
  closingDate  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relations
  candidates Candidate[]

  @@map("job_postings")
}

model Interview {
  id          Int       @id @default(autoincrement())
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)

  scheduledAt DateTime
  duration    Int             @default(60) // minutes
  type        InterviewType
  status      InterviewStatus @default(SCHEDULED)
  notes       String?
  feedback    String?
  rating      Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("interviews")
}

enum CandidateStatus {
  NEW
  SCREENING
  INTERVIEW
  OFFER
  HIRED
  REJECTED
}

enum JobStatus {
  ACTIVE
  DRAFT
  CLOSED
  PAUSED
}

enum InterviewType {
  PHONE
  VIDEO
  IN_PERSON
  TECHNICAL
}

enum InterviewStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  NO_SHOW
}
